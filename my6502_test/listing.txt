ca65 V2.19 - Git 03d824e13
Main file   : program.s
Current file: program.s

000000r 1               .segment "CODE"
000000r 1               .org $FF00
00FF00  1               reset:
00FF00  1  D8               CLD
00FF01  1  78               SEI
00FF02  1  A2 FF            LDX #$FF   ; Load X register with 127 (stack starts from top of memory)
00FF04  1  9A               TXS        ; Transfer X to stack pointer
00FF05  1               
00FF05  1  A9 00            LDA #$00
00FF07  1               lp:
00FF07  1  48               PHA                 ; save current ledval
00FF08  1  AD 00 20         LDA $2000           ; status register
00FF0B  1  29 01            AND #$01            ; bit0 is receive ready flag
00FF0D  1  F0 05            BEQ cont1           ; jump if nothing is received
00FF0F  1  68               PLA                 ; drop current ledvalue
00FF10  1  AD 01 20         LDA $2001           ; read from serial
00FF13  1  48               PHA                 ; change to the read one
00FF14  1               cont1:
00FF14  1  68               PLA                 ; restore ledval
00FF15  1  8D 00 10         STA $1000           ; ledpin output
00FF18  1  69 01            ADC #1              ; increment A
00FF1A  1               
00FF1A  1  A2 C8            LDX #200            ; sleep 200*1ms
00FF1C  1               lp2:
00FF1C  1  20 28 FF         JSR sleep1ms
00FF1F  1  CA               DEX
00FF20  1  D0 FA            BNE lp2
00FF22  1  8D 00 20         STA $2000           ; sending current ledval in serial
00FF25  1               
00FF25  1  4C 07 FF         JMP lp              ; loop
00FF28  1               
00FF28  1               sleep1ms:
00FF28  1  48               PHA     ;3
00FF29  1  98               TYA     ;2
00FF2A  1  48               PHA     ;3
00FF2B  1  8A               TXA     ;2
00FF2C  1  48               PHA     ;3
00FF2D  1               
00FF2D  1  A2 47            LDX #71    ;2
00FF2F  1                   ;sum15
00FF2F  1               lsleep2:
00FF2F  1  A0 5D            LDY #93    ;2
00FF31  1               lsleep1:
00FF31  1  88               DEY     ;2
00FF32  1  D0 FD            BNE lsleep1 ;2/3
00FF34  1                   ; sum15, 2+4*Y + 2
00FF34  1  CA               DEX     ;2
00FF35  1  D0 F8            BNE lsleep2 ;2/3
00FF37  1                   ; sum:15 + X*(2+4*Y+2+4)+2
00FF37  1                   ; 15 + X*(8+4*Y)+2
00FF37  1                   ; 17 + X*(8+4*Y)
00FF37  1               
00FF37  1  68               PLA     ;4
00FF38  1  AA               TAX     ;2
00FF39  1  68               PLA     ;4
00FF3A  1  A8               TAY     ;2
00FF3B  1  68               PLA     ;4
00FF3C  1  EA               NOP     ;1
00FF3D  1  60               RTS     ;6
00FF3E  1                   ; 40 + X*(8+4*Y) --> 71, 93, 27020, 0.000740741
00FF3E  1               
00FF3E  1               
00FF3E  1               
00FF3E  1               
00FF3E  1               .segment "VECTS"
00FF3E  1               .org $FFFA
00FFFA  1  00 FF        	.word	reset		; NMI
00FFFC  1  00 FF        	.word	reset		; RESET
00FFFE  1  00 FF        	.word	reset		; IRQ
00FFFE  1               
